version: "3.9"

services:
  ui:
    image: nexlura/gsim-ui:latest
    container_name: gsim-ui
    restart: always
    environment:
      - SESSION_SECRET=Pm/JwsD+oK39Ax88ixZs690Lf21Bq3hha5qAkFs+Zx0=
      - NEXT_PUBLIC_APP_URL=https://app.kyc-gsim.com
      - NEXT_PUBLIC_API_URL=https://api.kyc-gsim.com
      - NODE_ENV=production
      - HOST=0.0.0.0
      - PORT=3000
    depends_on:
      - api
    ports:
      - "3000:3000"
    networks:
      proxy:
        aliases:
          - gsim-ui

  api:
    image: nexlura/gsim-api:latest
    container_name: gsim-api
    restart: always
    depends_on:
      - postgres
      - redis
      - minio
    environment:
      - ENVIRONMENT=PROD
      - DATABASE_HOST=postgres
      - DATABASE_PORT=5432
      - DATABASE_USER=postgres
      - DATABASE_PASSWORD=admin
      - DATABASE_NAME=gsim
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - REDIS_DB=0
      - MINIO_HOST=minio
      - MINIO_ACCESS_KEY=minioadmin
      - MINIO_SECRET_KEY=minioadmin
      - MINIO_USE_SSL=false
      - MINIO_ENDPOINT_URL=https://media.kyc-gsim.com
    expose:
      - "8081"
    networks:
      - proxy
      - default

  # 🐘 PostgreSQL with persistent host data + backups
  postgres:
    image: postgres:15
    container_name: postgres
    restart: always
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: admin
      POSTGRES_DB: gsim
    volumes:
      - /home/nexlura/postgres/data:/var/lib/postgresql/data
      - /home/nexlura/postgres/backups:/backups
    ports:
      - "5432:5432"
    networks:
      - default

  # 🔄 Automated daily database backup
  postgres-backup:
    image: postgres:15
    container_name: postgres-backup
    restart: always
    depends_on:
      - postgres
    environment:
      PGPASSWORD: admin
    volumes:
      - /home/nexlura/postgres/backups:/backups
    entrypoint: >
      /bin/sh -c "
      while true; do
        echo '📦 Running daily backup...';
        pg_dump -h postgres -U postgres -d gsim > /backups/backup_$(date +%Y%m%d_%H%M%S).sql;
        echo '✅ Backup completed at' $(date);
        sleep 86400;
      done
      "
    networks:
      - default

  pgadmin:
    image: dpage/pgadmin4
    container_name: pgadmin
    restart: always
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@gsim.com
      PGADMIN_DEFAULT_PASSWORD: YWRtaW4=
    expose:
      - "80"
    networks:
      - proxy
      - default

  redis:
    image: redis:alpine
    container_name: redis
    restart: always
    ports:
      - "6379:6379"
    networks:
      - default

  redisinsight:
    image: redislabs/redisinsight:latest
    container_name: redisinsight
    restart: always
    expose:
      - "5540:5540"
    depends_on:
      - redis
    networks:
      - proxy
      - default

  minio:
    image: minio/minio
    container_name: minio
    command: server /data --console-address ":9001"
    restart: always
    environment:
      MINIO_ROOT_USER: minioadmin
      MINIO_ROOT_PASSWORD: minioadmin
      MINIO_SERVER_URL: https://media.kyc-gsim.com
      MINIO_BROWSER_REDIRECT_URL: https://minio.kyc-gsim.com
    volumes:
      - minio_data:/data
    expose:
      - "9000"
      - "9001"
    networks:
      - proxy
      - default
 
  createbuckets:
    image: minio/mc:latest
    depends_on:
      - minio
    entrypoint: >
      /bin/sh -c "
      sleep 10;
      mc alias set myminio http://minio:9000 minioadmin minioadmin;
      mc mb myminio/registrations || true;
      mc anonymous set public myminio/registrations;
      exit 0;
      "
    networks:
      - proxy
      - default

  nginx-proxy-manager:
    image: jc21/nginx-proxy-manager:latest
    container_name: nginx-proxy-manager
    restart: always
    ports:
      - "80:80"
      - "443:443"
      - "81:81"
    volumes:
      - npm_data:/data
      - npm_letsencrypt:/etc/letsencrypt
    networks:
      - proxy

volumes:
  minio_data:
  npm_data:
  npm_letsencrypt:

networks:
  proxy:
    driver: bridge